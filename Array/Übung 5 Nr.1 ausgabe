using System;

class Program
{
    static void Main()
    {
        // Benutzer wird aufgefordert, Koeffizienten einzugeben
        Console.WriteLine("f(x)= ax² + bx + c");
        Console.WriteLine();
        Console.WriteLine("Bitte gebe dein a ein:");
        double a = Convert.ToDouble(Console.ReadLine());

        Console.WriteLine("Bitte gebe dein b ein:");
        double b = Convert.ToDouble(Console.ReadLine());

        Console.WriteLine("Bitte gebe dein c ein:");
        double c = Convert.ToDouble(Console.ReadLine());

        int gridSize = 21; // Größe des Gitters (muss eine ungerade Zahl sein)

        // Initialisierung des zweidimensionalen Arrays für das Gitter
        char[][] grid = new char[gridSize][];

        // Initialisierung des Gitters mit Leerzeichen ' '
        for (int i = 0; i < gridSize; i++)
        {
            grid[i] = new char[gridSize];
            for (int j = 0; j < gridSize; j++)
            {
                grid[i][j] = ' ';
            }
        }

        // Achsen zeichnen
        int middle = gridSize / 2;
        for (int i = 0; i < gridSize; i++)
        {
            grid[middle][i] = '_'; // x-Achse
            grid[i][middle] = '|'; // y-Achse
        }

        // Zeichnen der Funktion
        for (int x = -middle; x <= middle; x++)
        {
            // Berechnung des y-Wertes für die gegebene x-Position
            double y = a * Math.Pow(x, 2) + b * x + c;

            // Umwandlung des y-Wertes in eine Koordinate im Gitter
            // wir invertieren y, um zwischen Konsolen- und kartesischen Koordinaten zu wechseln
            int yCoord = (int)Math.Round(-y + middle); 

            // Überprüfen, ob der y-Wert im sichtbaren Bereich des Gitters liegt
            if (yCoord >= 0 && yCoord < gridSize)
            {
                // Setzen des Zeichens '*' an der entsprechenden Position im Gitter
                grid[yCoord][x + middle] = '*';
            }
        }

        // Ausgabe des Gitters
        for (int i = 0; i < gridSize; i++)
        {
            for (int j = 0; j < gridSize; j++)
            {
                Console.Write(grid[i][j]);
            }
            Console.WriteLine();
        }
    }
}
