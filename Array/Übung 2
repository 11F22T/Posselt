using System;

namespace Übung_2
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] kameraBezeichnung = { "Secure Model A", "Secure Model B", "Secure Model C" };
            double[] aufloesungInMegapixel = { 1.3, 2.0, 4.0 };
            double[] bitrate = { 6000, 8000, 12000 };

            Console.WriteLine("Willkommen beim Security Programm");
            Console.WriteLine();
            PrintMoeglichkeiten(kameraBezeichnung, aufloesungInMegapixel, bitrate);
            int auswahlKamera = AuswahleKamera() - 1;
            double auswahlMegapixel = aufloesungInMegapixel[auswahlKamera];
            double auswahlBitrate = bitrate[auswahlKamera];
            (double laufzeitMoFr, double laufzeitSaSo) = LaufzeitAuswahlen();

            (double GByteProTagMoFr, double GByteProTagSaSo) = getGByteWoche(auswahlMegapixel, auswahlBitrate, laufzeitMoFr, laufzeitSaSo);

            string verwendeteKamera = kameraBezeichnung[auswahlKamera];
            Console.WriteLine($"Verbrauch an GB von Mo -Fr mit dem Model {verwendeteKamera} {GByteProTagMoFr}");
            Console.WriteLine($"Verbrauch an GB von Sa -So {GByteProTagSaSo}");
        }

        private static void PrintMoeglichkeiten(string[] kameraBezeichnung, double[] aufloesungInMegapixel, double[] bitrate)
        {
            for (int i = 0; i < 3; i++)
            {
                Console.WriteLine($"{i+1}. {kameraBezeichnung[i]} : {aufloesungInMegapixel[i]} : {bitrate[i]}");
            }
        }

        private static int AuswahleKamera()
        {
            Console.WriteLine("Welches Modell haben Sie?");
            int auswahlKamera;
            while (!int.TryParse(Console.ReadLine(), out auswahlKamera) || auswahlKamera < 1 || auswahlKamera > 3)
            {
                Console.WriteLine("Ungültige Eingabe. Bitte geben Sie eine Zahl zwischen 1 und 3 ein.");
            }
            return auswahlKamera;
        }

        private static (double, double) LaufzeitAuswahlen()
        {
            double laufzeitMoFr = 0;
            double laufzeitSaSo = 0;

            Console.WriteLine("1 Dauerbetrieb (24 Stunden)");
            Console.WriteLine("2 individuell (Eingabe der Stunden)");
            Console.WriteLine("3 kein Einsatz (0 Stunden)");

            Console.WriteLine("Welche Option möchten Sie?");
            int auswahl;
            while (!int.TryParse(Console.ReadLine(), out auswahl) || auswahl < 1 || auswahl > 3)
            {
                Console.WriteLine("Ungültige Eingabe. Bitte geben Sie eine Zahl zwischen 1 und 3 ein.");
            }

            switch (auswahl)
            {
                case 1:
                    laufzeitMoFr = 24;
                    laufzeitSaSo = 24;
                    break;
                case 2:
                    laufzeitMoFr = FrageLaufzeit(5);
                    laufzeitSaSo = FrageLaufzeit(2);
                    break;
                case 3:
                    break;
                default:
                    Console.WriteLine("Es ist ein Fehler aufgetreten.");
                    break;
            }
            return (laufzeitMoFr, laufzeitSaSo);
        }

        private static double FrageLaufzeit(int tage)
        {
            double laufzeit = 0;
            for (int i = 0; i < tage; i++)
            {
                Console.WriteLine("Wie lange läuft die Kamera am Tag?");
                double auswahllaufzeit;
                while (!double.TryParse(Console.ReadLine(), out auswahllaufzeit) || auswahllaufzeit < 0 || auswahllaufzeit > 24)
                {
                    Console.WriteLine("Ungültige Eingabe. Bitte geben Sie eine Zahl zwischen 0 und 24 ein.");
                }
                laufzeit += auswahllaufzeit;
            }
            return laufzeit;
        }

        private static (double, double) getGByteWoche(double auswahlMegapixel, double auswahlBitrate, double laufzeitMoFr, double laufzeitSaSo)
        {
            double KByte = auswahlBitrate / 8 * 3600;
            double MByte = KByte / 1000;

            double GByteProTagMoFr = MByte * laufzeitMoFr / 1000;
            double GByteProTagSaSo = MByte * laufzeitSaSo / 1000;
            return (GByteProTagMoFr, GByteProTagSaSo);
        }
    }
}
